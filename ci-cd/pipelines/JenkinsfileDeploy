utils = null

node() {
    try {
        timeout(20) {
            init()
            pushImageToDockerHub()
        }
        currentBuild.result = 'SUCCESS'
    } catch(e) {
        currentBuild.result = 'FAILURE'
    }
}

def init() {
    stage('init') {
        properties([
            [$class: 'JiraProjectProperty'],
            parameters([
                string(
                    defaultValue: 'master',
                    description: 'Pass commitID to deploy. You can pass a branch name as well.',
                    name: 'COMMIT_TO_DEPLOY',
                    trim: true
                ),
                string(
                    defaultValue: 'master',
                    description: 'Branch name will be used for the image tag.',
                    name: 'BRANCH_NAME',
                    trim: true
                )
            ])
        ])

        checkout([
            $class: 'GitSCM',
            branches: [[name: params.COMMIT_TO_DEPLOY]],
            userRemoteConfigs: [[
                credentialsId: 'sunny-github-credentials',
                url: 'https://github.com/sredhu37/ci-task.git'
            ]]
        ])
        utils = load "./ci-cd/pipelines/utils.groovy"
    }
}

def pushImageToDockerHub() {
    utils.stageWithGHStatusCheck('push image') {
        def branch = (params.BRANCH_NAME).replaceAll('/','-')
        def appImageName = "sunnyredhu/ci-task:${branch}-${params.COMMIT_TO_DEPLOY}"
        echo "Building image: ${appImageName}..."
        def appImage = docker.build(appImageName)
        echo "Done.\nPushing image: ${appImageName}..."
        docker.withRegistry('', "sunny-dockerhub-credentials") {
            appImage.push()
        }
        echo "Done."
    }
}