commitHash = ""
pythonImage = null

node() {
    timeout(20) {
        init()
        try {
            test()
        } finally {
            publishTestResults()
        }
    }
}

def init() {
    stage('init') {
        checkout scm

        def commitInfo = (sh (label: 'Get commit info', returnStdout: true, script: 'git log -n 1 --format="%H;%T;%an;%ae;%s"')).trim().split(';')
        commitHash = commitInfo[0]

        sh "printenv"
        echo "commitHash: ${commitHash}"

        echo "Building python runtime image..."
        dir("ci-cd/images/python-runtime") {
            pythonImage = docker.build("python-runtime:${env.BRANCH_NAME}")
        }
    }
}

def test() {
    stage('unit tests') {
        pythonImage.inside {
            withEnv(["PYTHONPATH=${pwd()}"]) {
                sh 'pytest --junit-xml="pytest_results.xml"'
            }
        }
    }
}

def publishTestResults() {
    stage('publish unit test results') {
        junit 'pytest_results.xml'
    }
}